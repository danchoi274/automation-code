Sub ACH_Format()

Dim lRow, lRowNew As Long
Dim nextDate
Dim saveNextDate
Dim olApp, olEmail, recipient
Dim dic As Dictionary

Set dic = CreateObject("Scripting.Dictionary")
Set olApp = CreateObject("outlook.application")
Set olEmail = olApp.CreateItem(0)
Set rec = CreateObject("Scripting.Dictionary")

nextDate = Application.WorkDay(Date, 1)
saveNextDate = Format(nextDate, "mmddyy")

'***after pasting ACH Debit info***

lRow = Cells.Find(What:="*", _
                After:=Range("A1"), _
                LookAt:=xlPart, _
                LookIn:=xlFormulas, _
                SearchOrder:=xlByRows, _
                SearchDirection:=xlPrevious, _
                MatchCase:=False).Row
                
'remove column 2 and format headers

Application.ScreenUpdating = False

Range("B:B").Delete
Cells(1, 1).Value = "EOR"
Cells(1, 2).Value = "Added By User"
Cells(1, 3).Value = "Client Name"
Cells(1, 4).Value = "Client ID"
Cells(1, 5).Value = "Invoice Number"
Cells(1, 6).Value = "Document Type"
Cells(1, 7).Value = "Invoice Credit Type"
Cells(1, 8).Value = "Terms"
Cells(1, 9).Value = "JDE Number"
Cells(1, 10).Value = "Invoice Status"
Cells(1, 11).Value = "Invoice Date"
Cells(1, 12).Value = "Due Date"
Cells(1, 13).Value = "Check Date"
Cells(1, 14).Value = "Payroll Release Date"
Cells(1, 15).Value = "Gross Amount"
Cells(1, 16).Value = "Open Amount"
Cells(1, 17).Value = "Invoice Comment"
Cells(1, 18).Value = "Bank Transit"
Cells(1, 19).Value = "Customer Bank Account"
Cells(1, 20).Value = "Bank Record Type"
Cells(1, 21).Value = "Pay Code Flag"
Cells(1, 22).Value = "Pay Code Amount"
Cells(1, 23).Value = "AC$SPI"
Cells(1, 24).Value = "AC$TOI"
Cells(1, 1).EntireRow.Font.Bold = True

'add and rename sheets

Sheets("Sheet1").Name = "All"
Sheets.Add(After:=Sheets("All")).Name = "CT"
Sheets.Add(After:=Sheets("CT")).Name = "MA"
Sheets.Add(After:=Sheets("MA")).Name = "All to ACH"

'transfer information from All to All to ACH

Sheets("All").Cells.Copy
Sheets("All to ACH").Paste

'format Gross Amount and Open Amount in All to ACH

Worksheets("All to ACH").Activate

Columns("O:P").Select
Selection.NumberFormat = "#,##0.00_);[Red](#,##0.00)"

'Criteria for row deletion:
'NO BANK ACCOUNT
'"DO NOT ACH"

For x = lRow To 2 Step -1
    If Worksheets("All to ACH").Cells(x, "R").Value Like "DO NOT ACH" _
    Or Len(Worksheets("All to ACH").Cells(x, "R").Value) = 0 Then
    Worksheets("All to ACH").Cells(x, "R").EntireRow.Delete
    End If
    
'Highlight outliers "RB" or "RU"

    If Worksheets("All to ACH").Cells(x, "F").Value = "RB" Or Worksheets("All to ACH").Cells(x, "F").Value = "RU" Then
    Worksheets("All to ACH").Cells(x, "F").Interior.Color = RGB(0, 150, 0)
    End If
Next x

'Highlight if client wants ACH from a specific account

For v = 2 To lRow
    If Cells(v, "Q").Value Like "*ACH*" Or Cells(v, "Q").Value Like "*ACCT*" Then
    Cells(v, "Q").Interior.Color = RGB(255, 255, 0)
    Cells(v, "C").Interior.Color = RGB(255, 255, 0)
        If (InStr(Cells(v, "Q").Value, Right(Cells(v, "S").Value, 3))) <> 0 Then
        Cells(v, "Q").Interior.Color = RGB(255, 192, 0)
        End If
    End If
Next v
    
'Delete rows with empty check date and positive open amount less than $500k
'*NOTE: Imported data sees "empty" cell as blank NOT empty* hence using len(trim)

For y = lRow To 2 Step -1
    If Len(Trim(Cells(y, "M").Value)) = 0 And Cells(y, "P").Value > 0 And Cells(y, "P").Value < 500000 Then
    Cells(y, "M").EntireRow.Delete
    End If
Next y

'Autofit Columns

Columns("C").AutoFit
Columns("O:Q").AutoFit

'Paste into CT and MA

Sheets("All to ACH").Cells.Copy
Sheets("CT").Paste
Sheets("MA").Paste

'Delete relevant EOR from CT and MA

For t = lRow To 2 Step -1
    If Worksheets("CT").Cells(t, 1).Value Like "A" Or Worksheets("CT").Cells(t, 1).Value Like "T" Then
    Worksheets("CT").Cells(t, 1).EntireRow.Delete
    End If
    If Worksheets("MA").Cells(t, 1).Value Like "D" Or Worksheets("MA").Cells(t, 1).Value Like "S" Then
    Worksheets("MA").Cells(t, 1).EntireRow.Delete
    End If
Next t

'Sort by User and Client Name for CT

tRange = "A1:" & "Y" & lRow

Worksheets("CT").Sort.SortFields.Clear
Worksheets("CT").Sort.SortFields.Add2 key:=Range("B:B"), _
    SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
Worksheets("CT").Sort.SortFields.Add2 key:=Range("C:C"), _
    SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
With Worksheets("CT").Sort
    .SetRange Range(tRange)
    .Header = xlYes
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
End With

'Subtotal CT by User, on Sum, by Open Amount,
'replacing current subtotals, page break between groups, grand total

Worksheets("CT").Activate
ActiveSheet.UsedRange.Select
Selection.Subtotal _
    GroupBy:=2, _
    Function:=xlSum, _
    TotalList:=Array(16), _
    Replace:=True, _
    PageBreaks:=True, _
    SummaryBelowData:=True

'Sort MA

Worksheets("MA").Sort.SortFields.Clear
Worksheets("MA").Sort.SortFields.Add2 key:=Range("B:B"), _
    SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
Worksheets("MA").Sort.SortFields.Add2 key:=Range("C:C"), _
    SortOn:=xlSortOnValues, Order:=xlAscending, DataOption:=xlSortNormal
With Worksheets("MA").Sort
    .SetRange Range(tRange)
    .Header = xlYes
    .MatchCase = False
    .Orientation = xlTopToBottom
    .SortMethod = xlPinYin
    .Apply
End With

'Subtotal MA

Worksheets("MA").Activate
ActiveSheet.UsedRange.Select
Selection.Subtotal _
    GroupBy:=2, _
    Function:=xlSum, _
    TotalList:=Array(16), _
    Replace:=True, _
    PageBreaks:=True, _
    SummaryBelowData:=True
    
'Save workbook

ActiveWorkbook.SaveAs Filename:="J:\Accounts Receivables\ACH Debit\2020\ACH_" & saveNextDate & "-toACH", _
FileFormat:=xlOpenXMLWorkbookMacroEnabled
    
'Delete credits in "All to ACH" sheet

Worksheets("All to ACH").Activate
For k = lRow To 2 Step -1
    If Cells(k, "P").Value < 0 Then
    Cells(k, "M").EntireRow.Delete
    End If
Next k

Application.ScreenUpdating = True

'Call ACH_Send

'End Sub

'Sub ACH_Send()

'Dim olApp, olEmail, recipients, lRowNew
'Dim dic As Dictionary

'Set dic = CreateObject("Scripting.Dictionary")
'Set olApp = CreateObject("outlook.application")
'Set olEmail = olApp.CreateItem(0)
'Set rec = CreateObject("Scripting.Dictionary")

'update the email contact name here
'left side is what is in the excel file
'right side is the email address sans domain

rec.Add "BDELGADO", "briana.delgado"
rec.Add "CBRAUER", "cbrauer"
rec.Add "DWILLIAM", "dwilliamson"
rec.Add "GGEIGER", "ggeiger"
rec.Add "JDUNN", "jdunn"
rec.Add "JWORMER", "jwormer"
rec.Add "AACHAY", "aachay"
rec.Add "DCLAY", "dclay"
rec.Add "HGARGANE", "hgarganera"
rec.Add "IROSALES", "irosales"
rec.Add "JMACROHO", "lmacrohon"
rec.Add "JRASCON", "jrascon"
rec.Add "JWOJTANO", "jwojtanowski"
rec.Add "MMURPHY", "mmurphy"
rec.Add "RGONZALE", "rgonzalez"
rec.Add "RTIWARIE", "rtiwarie"
rec.Add "TABITHAM", "tabitham"
rec.Add "LMEEKER", "lmeeker"

lRowNew = Sheets("All to ACH").Cells.Find(What:="*", _
                    After:=Range("A1"), _
                    LookAt:=xlPart, _
                    LookIn:=xlFormulas, _
                    SearchOrder:=xlByRows, _
                    SearchDirection:=xlPrevious, _
                    MatchCase:=False).Row

For x = 2 To lRowNew
If dic.Exists(Sheets("All to ACH").Cells(x, "B").Value) Then
    Else
    dic.Add Sheets("All to ACH").Cells(x, "B").Value, x
End If
Next x

With olEmail
    olEmail.cc = "anguyen@theteamcompanies.com;" & _
            "msermonia@theteamcompanies.com;" & _
            "dclarino@theteamcompanies.com;" & _
            "ggomez@theteamcompanies.com;" & _
            "hleasiolagi@theteamcompanies.com;" & _
            "dpaez@theteamcompanies.com;" & _
            "dchoi@theteamcompanies.com;"
        .Subject = "ACH FOR PROCESSING " & FormatDateTime(Date, vbShortDate)
        .htmlbody = ("***Please do not reply all when responding***<br><br>" & _
        "<font color=""red""><b>All invoices without a check date have been removed from the ACH.</font></b><br><br>" & _
        "<u>Please see attached and advise on the <b>HOLDS and CREDITS (including any credits to be netted).</b></u><br><br>" & _
        "<font color=""#2E75B6"">We will proceed with processing the ACH which includes adjusting all of the advised holds. " & _
        "As we are generally working with a high volume, the goal is to avoid ACH's of incorrect amounts, incorrect bank accounts, and or unauthorized transactions. " & vbCrLf & vbCrLf & _
        "When the invoice is ready to ACH, it will be initiated the following business day.<br><br>" & _
        "<u><b>Any items not requested for hold will be ACH'd.</u></b></font><br><br>" & _
        "Thank you!")
        .Display
        '.attachments.Add ActiveWorkbook.FullName
        .attachments.Add ("J:\Accounts Receivables\ACH Debit\2020\ACH_" & saveNextDate & "-toACH.xlsm")
    For Each dkey In dic.Keys
        If rec.Exists(dkey) Then
        olEmail.recipients.Add (rec.Item(dkey) & "@theteamcompanies.com")
        Else
        MsgBox (dkey & " does not exist in the email list")
        End If
    Next dkey
End With

Sheets("All to ACH").Cells(lRowNew + 1, "P").Value = WorksheetFunction.Sum(Range("P1:P" & lRowNew))

Set olEmail = Nothing
Set olApp = Nothing

End Sub


Sub Weekly_AR()

Application.ScreenUpdating = False

Dim numRows As Long
Dim numRows2 As Long
Dim amountOpen, pastDue7, numAmountOpen, numPastDue7, numComments

amountOpen = "E" 'after formatting, column 5
pastDue7 = "O" 'after formatting, column 15
numAmountOpen = 5 'column E
numPastDue7 = 15 'column O
numComments = 17 'column Q

numRows = Cells.Find(What:="*", _
                After:=Range("A1"), _
                LookAt:=xlPart, _
                LookIn:=xlFormulas, _
                SearchOrder:=xlByRows, _
                SearchDirection:=xlPrevious, _
                MatchCase:=False).Row
                
'Delete column A, format numbers, and freeze header

Sheets("HS DX Commercials Aging Payroll").Name = "Commercials Aging All"

ActiveWindow.FreezePanes = False
Rows(2).Select
ActiveWindow.FreezePanes = True

Range("I:U").NumberFormat = "#,##0_);[Red](#,##0)"

'Add sheet and copy info

Sheets.Add(Before:=Sheets("Commercials Aging All")).Name = "Summary"
Sheets("Commercials Aging All").Cells.Copy
Sheets("Summary").Paste

'Edit Summary sheet, freeze and color header

Sheets("Summary").Activate
Range("A:B,F:F,H:I").Delete
Range(Cells(1, 1), Cells(1, numComments)).Interior.ColorIndex = 35

ActiveWindow.FreezePanes = False
Rows(2).Select
ActiveWindow.FreezePanes = True

'Delete accounts with less than $20K past due

For x = numRows To 2 Step -1
    If Cells(x, pastDue7).Value < 20000 Then
       Cells(x, pastDue7).EntireRow.Delete
    End If
Next x

'Count new number of rows

numRows2 = Cells.Find(What:="*", _
                After:=Range("A1"), _
                LookAt:=xlPart, _
                LookIn:=xlFormulas, _
                SearchOrder:=xlByRows, _
                SearchDirection:=xlPrevious, _
                MatchCase:=False).Row
                
Range(Cells(numRows2, 1), Cells(numRows2, numAmountOpen - 1)).Merge

'Add remaining accounts row

Rows(numRows2).Insert Shift:=xlDown
Cells(numRows2, 1).Value = "REMAINING ACCOUNTS"
Range("A" & numRows2 & ":" & "D" & numRows2).Merge
Cells(numRows2, 1).EntireRow.Font.Bold = True

'Add sub totals > $20K row

Rows(numRows2).Insert Shift:=xlDown
Cells(numRows2, 1).Value = "SUB-TOTAL OF ACCOUNTS > $20K"
Range("A" & numRows2 & ":" & "D" & numRows2).Merge
Cells(numRows2, 1).EntireRow.Font.Bold = True

'Calculate totals for the rows and fill color

Range(amountOpen & numRows2).End(xlUp).Offset(1).FormulaR1C1 = "=SUM(R2C:R[-1]C)"
Range(amountOpen & numRows2).Select
Selection.AutoFill Destination:=Range(Cells(numRows2, amountOpen), Cells(numRows2, numComments - 1)), Type:=xlFillDefault
Range(Cells(numRows2, 1), Cells(numRows2, numComments)).Interior.ColorIndex = 6

Range(amountOpen & numRows2 + 1).Select
ActiveCell.FormulaR1C1 = "=R[1]C-R[-1]C"
Range(amountOpen & numRows2 + 1).Select
Selection.AutoFill Destination:=Range(Cells(numRows2 + 1, amountOpen), Cells(numRows2 + 1, numComments - 1)), Type:=xlFillDefault

'Analysis Past-due % of Total AR > $20K

Cells(numRows2 + 3, numPastDue7 - 4).Value = "Past-due % of Total AR > $20K"
Range(Cells(numRows2 + 3, numPastDue7 - 4), Cells(numRows2 + 3, numPastDue7 - 1)).Merge
Cells(numRows2 + 3, pastDue7).Value = Cells(numRows2 + 2, numPastDue7).Value / Cells(numRows2 + 2, numAmountOpen)

'Analysis Benchmark, color interior

Cells(numRows2 + 4, numPastDue7 - 4).Value = "Benchmark"
Range(Cells(numRows2 + 4, numPastDue7 - 4), Cells(numRows2 + 4, numPastDue7 - 1)).Merge
Cells(numRows2 + 4, pastDue7).Value = 0.15
Range(Cells(numRows2 + 4, numPastDue7 - 4), Cells(numRows2 + 4, numPastDue7)).Interior.ColorIndex = 35

'Analysis Past-due % vs Benchmark

Cells(numRows2 + 5, numPastDue7 - 4).Value = "Past-due % vs Benchmark"
Range(Cells(numRows2 + 5, numPastDue7 - 4), Cells(numRows2 + 5, numPastDue7 - 1)).Merge
Cells(numRows2 + 5, numPastDue7).Value = Cells(numRows2 + 4, numPastDue7).Value - Cells(numRows2 + 3, numPastDue7).Value

Range(pastDue7 & numRows2 + 3 & ":" & pastDue7 & numRows2 + 5).NumberFormat = "0.0%"
Worksheets("Summary").Cells.EntireColumn.AutoFit

Application.ScreenUpdating = True



End Sub


Sub Hogarth1()

Dim lRow As Long
Dim lRowNew As Long
Dim lRowOld As Long
Dim CI, invCol, jobCol, estCol, oldHog, estNo

Dim WBStatic As Workbook
Dim WBNew As Workbook
Dim WBHog As Workbook

DoEvents

Workbooks.Open ("J:\Accounts Receivables\Hogarth\Hogarth static.xlsx")
Workbooks.Open ("J:\Accounts Receivables\Hogarth\Hog Cover Invoice.xlsx")
Set WBNew = Workbooks("HS DX Hogarth ")
Set WBStatic = Workbooks("Hogarth static")
Set WBHog = Workbooks("Hog Cover Invoice")

Set WSStatic = WBStatic.Sheets("HS DX Hogarth ")
Set WSNew = WBNew.Sheets("HS DX Hogarth ")
Set WSHog = WBHog.Sheets("Manual Invoice Template")

CI = 5
invCol = 7
jobCol = 2
estCol = 1
oldHog = Mid(WSHog.Cells(15, "B").Value, 4)

Application.ScreenUpdating = False
Application.DisplayAlerts = False

'update date in cover invoice

WSHog.Cells(13, 2).Value = Date

'get number of rows, delete grand total row

WSNew.Activate

lRow = Cells.Find(What:="*", _
                After:=Range("A1"), _
                LookAt:=xlPart, _
                LookIn:=xlFormulas, _
                SearchOrder:=xlByRows, _
                SearchDirection:=xlPrevious, _
                MatchCase:=False).Row
                
lRowOld = WSStatic.Cells.Find(What:="*", _
                After:=Range("A1"), _
                LookAt:=xlPart, _
                LookIn:=xlFormulas, _
                SearchOrder:=xlByRows, _
                SearchDirection:=xlPrevious, _
                MatchCase:=False).Row
                
Rows(lRow).EntireRow.Delete
Range("A1:W" & lRow).Borders.LineStyle = xlContinuous
    
'populate estimate number with job number
'delete rows with "total"
'clear job number column

For i = 2 To lRow
    If IsEmpty(Cells(i, jobCol).Value) = False Then
        Cells(i, estCol) = Cells(i, jobCol)
    End If
    If Cells(i, estCol).Value Like "Total*" Then
    Cells(i, estCol).EntireRow.Delete
    End If
    Cells(i, jobCol).ClearContents
Next i

'sort col 1 numerically

Columns("A:Z").Sort key1:=Columns("A"), _
    Order1:=xlAscending, _
    key2:=Columns("G"), _
    Header:=xlYes
    
'populate consolidated invoice numbers based on invoice numbers
'between WB Static and WB New

For y = 2 To lRow
    For x = 2 To lRowOld
        If WSNew.Cells(y, invCol).Value = WSStatic.Cells(x, invCol).Value Then
            WSNew.Cells(y, CI).Value = WSStatic.Cells(x, CI).Value
            GoTo NextIteration
        End If
    Next x
NextIteration:
Next y

'create a subtotal on open amount based on estimate number

Selection.Subtotal GroupBy:=1, Function:=xlSum, _
TotalList:=Array(17, 18, 19, 20, 21, 22, 23)

'get new number of rows

lRowNew = Cells.Find(What:="*", _
                After:=Range("A1"), _
                LookAt:=xlPart, _
                LookIn:=xlFormulas, _
                SearchOrder:=xlByRows, _
                SearchDirection:=xlPrevious, _
                MatchCase:=False).Row
                                
'color "grand total" row
               
Rows(lRowNew).EntireRow.Interior.ColorIndex = 6

'change font color of "total" rows

For i = 2 To lRowNew - 1
    If (Cells(i, 1) Like "*Total*") = True Then
    Rows(i).EntireRow.Font.Color = RGB(0, 0, 255)
    End If
Next i

'remove zeroes in subtotals

ActiveWindow.DisplayZeros = False

WBStatic.Close

Application.ScreenUpdating = True
Application.DisplayAlerts = True

Call Hogarth2

End Sub


Sub Hogarth2()

Application.DisplayAlerts = False

Dim WBNew As Workbook
Dim WBHog As Workbook
Dim today As Date
Dim CI, invCol, jobCol, estCol, oldHog, estNo
Dim deleteRows
Dim lRow As Long

Set WBNew = Workbooks("HS DX Hogarth ")
Set WBHog = Workbooks("Hog Cover Invoice")

Set WSNew = WBNew.Sheets("HS DX Hogarth ")
Set WSHog = WBHog.Sheets("Manual Invoice Template")

CI = 5
invCol = 7
jobCol = 2
estCol = 1
oldHog = Mid(WSHog.Cells(15, "B").Value, 4)

'create new CI # and invoice

lRow = Cells.Find(What:="*", _
                After:=Range("A1"), _
                LookAt:=xlPart, _
                LookIn:=xlFormulas, _
                SearchOrder:=xlByRows, _
                SearchDirection:=xlPrevious, _
                MatchCase:=False).Row
                
For x = 2 To lRow
    If IsEmpty(WSNew.Cells(x, CI)) = True And _
    (WSNew.Cells(x, estCol).Text <> WSHog.Cells(17, "B").Text) And _
    Not WSNew.Cells(x, estCol).Text Like "*Total*" Then
        estNo = WSNew.Cells(x, estCol).Value
        oldHog = oldHog + 1
        WSHog.Cells(15, "B").Value = "HOG" & oldHog
        WSHog.Cells(17, "B").Value = estNo
        deleteRows = (WSHog.Cells.Find("TOTAL", MatchCase:=True).Row - 2)
        WSHog.Rows("24:" & deleteRows).Delete
        
        WSHog.Rows(24).Insert Shift:=xlShiftDown, CopyOrigin:=xlFormatFromRightOrBelow
        WSHog.Cells(24, "A").Value = WSNew.Cells(x, "G").Value
        WSHog.Cells(24, "H").Value = WSNew.Cells(x, "J").Value
        WSHog.Cells(24, "I").Value = WSNew.Cells(x, "K").Value
        WSHog.Cells(24, "K").Value = WSNew.Cells(x, "M").Value
        WSHog.Cells(24, "M").Value = WSNew.Cells(x, "Q").Value
        WSNew.Cells(x, CI).Value = "HOG" & oldHog

'add invoices to same CI #
        
    ElseIf IsEmpty(WSNew.Cells(x, CI)) = True And _
    WSNew.Cells(x, estCol).Text = WSHog.Cells(17, "B").Text And _
    Not WSNew.Cells(x, estCol).Text Like "*Total*" Then
    
        WSHog.Rows(24).Insert Shift:=xlShiftDown, CopyOrigin:=xlFormatFromRightOrBelow
        WSHog.Cells(24, "A").Value = WSNew.Cells(x, "G").Value
        WSHog.Cells(24, "H").Value = WSNew.Cells(x, "J").Value
        WSHog.Cells(24, "I").Value = WSNew.Cells(x, "K").Value
        WSHog.Cells(24, "K").Value = WSNew.Cells(x, "M").Value
        WSHog.Cells(24, "M").Value = WSNew.Cells(x, "Q").Value
        WSNew.Cells(x, CI).Value = "HOG" & oldHog
    
'save CI #
    
    ElseIf WSNew.Cells(x, "A").Text Like "*Total*" Then
    
        WBHog.SaveAs Filename:="J:\Accounts Receivables\Hogarth\" & _
        Format(Date, "yyyy") & "\" & _
        WSHog.Cells(15, "B").Value & " " & _
        WSHog.Cells(17, "B").Value & " " & _
        WSHog.Cells(19, "B").Value & " Cover Invoice " & _
        Format(Date, "mm_dd_yy") & ".xlsx"
        
    End If
Next x

WBNew.SaveAs Filename:="J:\Accounts Receivables\Hogarth\Hogarth static.xlsx"
WBNew.SaveAs Filename:="J:\Accounts Receivables\Hogarth\Hogarth " & _
    Format(Date, "mm-dd") & ".xlsx"
WBHog.SaveAs Filename:="J:\Accounts Receivables\Hogarth\Hog Cover Invoice.xlsx"

Application.DisplayAlerts = True

End Sub
